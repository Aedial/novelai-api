[tool.poetry]
name = "novelai-api"
version = "0.11.2"
description = "Python API for the NovelAI REST API"
license = "MIT"
authors = ["Aedial <aedial.dev@gmail.com>"]
readme = "README.md"
repository = "https://github.com/Aedial/novelai-api"
keywords = ["python", "NovelAI", "NAI", "API"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
]
packages = [{include = "novelai_api"}]

[tool.poetry.dependencies]
python = ">=3.7.2,<3.12"
aiohttp = {extras = ["speedups"], version = "^3.8.3"}
argon2-cffi = "^21.3.0"
PyNaCl = "^1.5.0"
jsonschema = "^4.17.0"
tokenizers = "^0.13.1"
ftfy = "^6.1.1"
regex = "^2022.10.31"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.20.1"
pytest-xdist = "^3.0.2"
pylint = "^2.15.5"

[tool.flake8]
# TODO: add flake when supports come

[tool.bandit]
exclude_dirs = ["tests/api/test_decrypt_encrypt_integrity_check.py"]
skips = ["B101", "B311"]

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint]
max-line-length = 120
ignore-paths = [
    # Code imported as is
    "novelai_api/tokenizers",
    # Code unused atm
    "novelai_api/StoryHandler.py",
    "tests/api/disabled_test_manipulate_stories"
]
disable = [
    # access to private members
    "W0212",
    # FIXMEs and TODOs
    "W0511",
    # names
    "C0103",
    # missing docstring
    "C0114", "C0115", "C0116",
    # duplicate code between files (dumb how far it overreaches)
    "R0801",
    # too many/few methods/arguments/X (splitting just makes the code messier)
    "R0902", "R0903", "R0904", "R0913", "R0914"
]

[tool.pylint.MASTER]
# add novelai_api to the path, as pylint fails to detect the package (waiting for https://github.com/PyCQA/pylint/projects/1)
init-hook="""
from sys import path
from pylint.config import find_default_config_files
path.extend(p.parent for p in find_default_config_files())
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
